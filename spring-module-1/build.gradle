plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

dependencies {
    implementation project(':shared')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.3'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.3'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testImplementation('org.springframework.boot:spring-boot-starter-test:3.1.3')
}

sourceSets {
    integrationTest {
        java.srcDir 'src/test/java'
        resources.srcDir 'src/test/resources'

        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

tasks.register('integrationTest', Test) {
    group 'build'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    useJUnitPlatform()
    dependsOn(dockerComposeUp)
    finalizedBy(removeCompose)

    jvmArgs("-Dfile.encoding=UTF-8",
            "-DTEST_MYSQL_ROOT_USER=${testMySQLUser}",
            "-DTEST_MYSQL_ROOT_PASSWORD=${testMySQLPassword}"
    )
}

tasks.register('dockerComposeUp', Exec) {
    onlyIf { file("$projectDir/src/test/resources/docker-compose.yml").exists() }
    workingDir('./src/test/resources/')
    environment 'TEST_MYSQL_ROOT_USER', testMySQLUser
    environment 'TEST_MYSQL_ROOT_PASSWORD', testMySQLPassword
    commandLine 'docker-compose', 'up', '-d', '--remove-orphans'
}

tasks.register('removeCompose', Exec) {
    onlyIf { file("$projectDir/src/test/resources/docker-compose.yml").exists() }
    workingDir('./src/test/resources/')
    environment 'TEST_MYSQL_ROOT_USER', testMySQLUser
    environment 'TEST_MYSQL_ROOT_PASSWORD', testMySQLPassword
    commandLine 'docker-compose', 'down', '-v'
}

test {
    useJUnitPlatform()
}
